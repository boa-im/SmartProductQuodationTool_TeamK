// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartProductQuotationTool.DataAccess;

#nullable disable

namespace SmartProductQuotationTool.Migrations
{
    [DbContext(typeof(SPQTDbContext))]
    [Migration("20230502212407_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SmartProductQuotationTool.Entities.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"), 1L, 1);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CartId");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("SmartProductQuotationTool.Entities.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"), 1L, 1);

                    b.Property<int?>("CartId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PVCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("Qty")
                        .HasColumnType("int");

                    b.HasKey("InventoryId");

                    b.HasIndex("CartId");

                    b.ToTable("Inventories");

                    b.HasData(
                        new
                        {
                            InventoryId = 1,
                            Description = "",
                            Level = 1,
                            Name = "FX-401R",
                            PVCode = "B",
                            Price = 3600.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 2,
                            Description = "",
                            Level = 1,
                            Name = "FX-401B",
                            PVCode = "B",
                            Price = 3600.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 3,
                            Description = "",
                            Level = 2,
                            Name = "RAX-LCD-LITE",
                            PVCode = "B",
                            Price = 1400.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 4,
                            Description = "",
                            Level = 2,
                            Name = "RAM-1032TZDS",
                            PVCode = "A",
                            Price = 825.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 5,
                            Description = "",
                            Level = 2,
                            Name = "RAM-1032TZDS-CC",
                            PVCode = "B",
                            Price = 1120.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 6,
                            Description = "",
                            Level = 2,
                            Name = "RAX-1048TZDS",
                            PVCode = "A",
                            Price = 555.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 7,
                            Description = "",
                            Level = 2,
                            Name = "RAX-1048TZDS-CC",
                            PVCode = "B",
                            Price = 830.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 8,
                            Description = "",
                            Level = 3,
                            Name = "UIMA4",
                            PVCode = "A",
                            Price = 295.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 9,
                            Description = "",
                            Level = 3,
                            Name = "MGC-CONFIG-KIT4",
                            PVCode = "B",
                            Price = 425.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 10,
                            Description = "",
                            Level = 4,
                            Name = "ALC-480",
                            PVCode = "B",
                            Price = 1160.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 11,
                            Description = "",
                            Level = 4,
                            Name = "PR-300",
                            PVCode = "B",
                            Price = 255.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 12,
                            Description = "",
                            Level = 4,
                            Name = "AGD-048",
                            PVCode = "B",
                            Price = 815.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 13,
                            Description = "",
                            Level = 4,
                            Name = "MGD-32",
                            PVCode = "B",
                            Price = 1105.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 14,
                            Description = "",
                            Level = 4,
                            Name = "PCS-100",
                            PVCode = "B",
                            Price = 210.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 15,
                            Description = "",
                            Level = 4,
                            Name = "MP-3500W",
                            PVCode = "B",
                            Price = 35.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 16,
                            Description = "",
                            Level = 4,
                            Name = "SRM-312R",
                            PVCode = "C",
                            Price = 780.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 17,
                            Description = "",
                            Level = 5,
                            Name = "BB-1001DR",
                            PVCode = "B",
                            Price = 285.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 18,
                            Description = "",
                            Level = 5,
                            Name = "BB-1001D",
                            PVCode = "A",
                            Price = 285.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 19,
                            Description = "",
                            Level = 5,
                            Name = "BB-1001DB",
                            PVCode = "B",
                            Price = 285.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 20,
                            Description = "",
                            Level = 5,
                            Name = "BB-1001DS",
                            PVCode = "C",
                            Price = 490.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 21,
                            Description = "",
                            Level = 5,
                            Name = "BB-1001WPRA",
                            PVCode = "B",
                            Price = 1075.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 22,
                            Description = "",
                            Level = 5,
                            Name = "BB-1001WPA",
                            PVCode = "B",
                            Price = 1075.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 23,
                            Description = "",
                            Level = 5,
                            Name = "BB-1002DR",
                            PVCode = "B",
                            Price = 515.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 24,
                            Description = "",
                            Level = 5,
                            Name = "BB-1002D",
                            PVCode = "B",
                            Price = 515.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 25,
                            Description = "",
                            Level = 5,
                            Name = "BB-1002DB",
                            PVCode = "B",
                            Price = 515.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 26,
                            Description = "",
                            Level = 5,
                            Name = "BB-1002DS",
                            PVCode = "C",
                            Price = 590.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 27,
                            Description = "",
                            Level = 5,
                            Name = "BB-1002WPRA",
                            PVCode = "B",
                            Price = 1335.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 28,
                            Description = "",
                            Level = 5,
                            Name = "BB-1002WPA",
                            PVCode = "C",
                            Price = 1335.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 29,
                            Description = "",
                            Level = 5,
                            Name = "BB-1003DR",
                            PVCode = "C",
                            Price = 640.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 30,
                            Description = "",
                            Level = 5,
                            Name = "BB-1003D",
                            PVCode = "B",
                            Price = 640.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 31,
                            Description = "",
                            Level = 5,
                            Name = "BB-1003DB",
                            PVCode = "C",
                            Price = 640.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 32,
                            Description = "",
                            Level = 5,
                            Name = "BB-1003DS",
                            PVCode = "C",
                            Price = 900.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 33,
                            Description = "",
                            Level = 5,
                            Name = "BB-1008DR",
                            PVCode = "C",
                            Price = 1590.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 34,
                            Description = "",
                            Level = 5,
                            Name = "BB-1008D",
                            PVCode = "B",
                            Price = 1590.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 35,
                            Description = "",
                            Level = 5,
                            Name = "BB-1008DB",
                            PVCode = "C",
                            Price = 1590.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 36,
                            Description = "",
                            Level = 5,
                            Name = "BB-1012DR",
                            PVCode = "C",
                            Price = 1770.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 37,
                            Description = "",
                            Level = 5,
                            Name = "BB-1012D",
                            PVCode = "C",
                            Price = 1770.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 38,
                            Description = "",
                            Level = 5,
                            Name = "BB-1012DB",
                            PVCode = "C",
                            Price = 1770.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 39,
                            Description = "",
                            Level = 6,
                            Name = "MIX-4010",
                            PVCode = "A",
                            Price = 130.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 40,
                            Description = "",
                            Level = 6,
                            Name = "MIX-4010-ISO",
                            PVCode = "A",
                            Price = 140.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 41,
                            Description = "",
                            Level = 6,
                            Name = "MIX-4020",
                            PVCode = "A",
                            Price = 160.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 42,
                            Description = "",
                            Level = 6,
                            Name = "MIX-4020-ISO",
                            PVCode = "B",
                            Price = 170.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 43,
                            Description = "",
                            Level = 6,
                            Name = "MIX-4030",
                            PVCode = "A",
                            Price = 110.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 44,
                            Description = "",
                            Level = 6,
                            Name = "MIX-4030-ISO",
                            PVCode = "A",
                            Price = 120.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 45,
                            Description = "",
                            Level = 6,
                            Name = "MIX-4001",
                            PVCode = "A",
                            Price = 28.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 46,
                            Description = "",
                            Level = 6,
                            Name = "MIX-4002",
                            PVCode = "A",
                            Price = 24.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 47,
                            Description = "",
                            Level = 6,
                            Name = "MIX-4003-R",
                            PVCode = "B",
                            Price = 140.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 48,
                            Description = "",
                            Level = 6,
                            Name = "MIX-4003-S",
                            PVCode = "B",
                            Price = 1275.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 49,
                            Description = "",
                            Level = 6,
                            Name = "MIX-4090",
                            PVCode = "A",
                            Price = 600.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 50,
                            Description = "",
                            Level = 6,
                            Name = "MIX-4040",
                            PVCode = "A",
                            Price = 130.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 51,
                            Description = "",
                            Level = 6,
                            Name = "MIX-4041",
                            PVCode = "A",
                            Price = 110.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 52,
                            Description = "",
                            Level = 6,
                            Name = "MIX-4042",
                            PVCode = "B",
                            Price = 195.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 53,
                            Description = "",
                            Level = 6,
                            Name = "MIX-4045",
                            PVCode = "A",
                            Price = 150.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 54,
                            Description = "",
                            Level = 6,
                            Name = "MIX-4046",
                            PVCode = "A",
                            Price = 160.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 55,
                            Description = "",
                            Level = 6,
                            Name = "MIX-4050",
                            PVCode = "A",
                            Price = 170.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 56,
                            Description = "",
                            Level = 6,
                            Name = "MIX-4070",
                            PVCode = "A",
                            Price = 115.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 57,
                            Description = "",
                            Level = 7,
                            Name = "MPS-810MP",
                            PVCode = "N",
                            Price = 190.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 58,
                            Description = "",
                            Level = 7,
                            Name = "MPS-802MP",
                            PVCode = "N",
                            Price = 200.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 59,
                            Description = "",
                            Level = 7,
                            Name = "MPS-822MP",
                            PVCode = "N",
                            Price = 210.0,
                            Qty = 1
                        },
                        new
                        {
                            InventoryId = 60,
                            Description = "",
                            Level = 7,
                            Name = "BB-800",
                            PVCode = "N",
                            Price = 45.0,
                            Qty = 1
                        });
                });

            modelBuilder.Entity("SmartProductQuotationTool.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "b76d7579-f289-49e5-9420-ee1c7dff2556",
                            AccessFailedCount = 0,
                            Address1 = "1750 Finch Ave E",
                            Address2 = "",
                            City = "North York",
                            CompanyName = "Seneca College",
                            ConcurrencyStamp = "67843b75-6c0a-479d-a151-885c5a966f56",
                            Country = "Canada",
                            Discount = 66.0,
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "Password1#",
                            PhoneNumber = "111-111-1111",
                            PhoneNumberConfirmed = false,
                            PostalCode = "M2J 2X5",
                            Province = "ON",
                            SecurityStamp = "b3642e0d-d864-4376-b81f-fcb480eb97f3",
                            TwoFactorEnabled = false,
                            UserName = "MTL-000001",
                            Website = "https://www.senecacollege.ca/home.html"
                        },
                        new
                        {
                            Id = "5e84e903-7586-426d-bc31-5b40090f8bd9",
                            AccessFailedCount = 0,
                            Address1 = "108 University Ave",
                            Address2 = "",
                            City = "Waterloo",
                            CompanyName = "Conestoga College",
                            ConcurrencyStamp = "2ca957e5-4eee-492c-860e-0e8d125002ad",
                            Country = "Canada",
                            Discount = 68.0,
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "Password2#",
                            PhoneNumber = "222-222-2222",
                            PhoneNumberConfirmed = false,
                            PostalCode = "N2J 2W2",
                            Province = "ON",
                            SecurityStamp = "ef93b27b-e069-4c5c-9d91-99e4358f33a0",
                            TwoFactorEnabled = false,
                            UserName = "MTL-000002",
                            Website = "https://www.conestogac.on.ca"
                        },
                        new
                        {
                            Id = "145f595f-a120-4dba-9d72-71180cec2980",
                            AccessFailedCount = 0,
                            Address1 = "200 University Ave W",
                            Address2 = "",
                            City = "Waterloo",
                            CompanyName = "University of Waterloo",
                            ConcurrencyStamp = "9c34d9b2-59d0-4bb2-8a1a-91d38b9d956b",
                            Country = "Canada",
                            Discount = 70.0,
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "Password3#",
                            PhoneNumber = "333-333-3333",
                            PhoneNumberConfirmed = false,
                            PostalCode = "N2L 3G1",
                            Province = "ON",
                            SecurityStamp = "8757fd25-4b59-4583-a1a4-a6f95615a6a1",
                            TwoFactorEnabled = false,
                            UserName = "MTL-000003",
                            Website = "https://uwaterloo.ca"
                        },
                        new
                        {
                            Id = "c4e70837-bb78-422a-97c2-2cafb592aca6",
                            AccessFailedCount = 0,
                            Address1 = "27 King's College Circle",
                            Address2 = "",
                            City = "Waterloo",
                            CompanyName = "University of Toronto",
                            ConcurrencyStamp = "3a03e17b-b24b-409b-9dfe-03ebecd8c229",
                            Country = "Canada",
                            Discount = 72.0,
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "Password4#",
                            PhoneNumber = "444-444-4444",
                            PhoneNumberConfirmed = false,
                            PostalCode = "M5S 1A1",
                            Province = "ON",
                            SecurityStamp = "e3ad84c4-cbe5-4074-93a3-47e360eff6db",
                            TwoFactorEnabled = false,
                            UserName = "MTL-000004",
                            Website = "https://www.utoronto.ca"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SmartProductQuotationTool.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SmartProductQuotationTool.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartProductQuotationTool.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SmartProductQuotationTool.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartProductQuotationTool.Entities.Cart", b =>
                {
                    b.HasOne("SmartProductQuotationTool.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartProductQuotationTool.Entities.Inventory", b =>
                {
                    b.HasOne("SmartProductQuotationTool.Entities.Cart", null)
                        .WithMany("Inventories")
                        .HasForeignKey("CartId");
                });

            modelBuilder.Entity("SmartProductQuotationTool.Entities.Cart", b =>
                {
                    b.Navigation("Inventories");
                });
#pragma warning restore 612, 618
        }
    }
}
